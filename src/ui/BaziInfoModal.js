import { Modal, Setting } from 'obsidian';
import { BaziService } from '../services/BaziService';
/**
 * 八字信息展示模态框
 */
export class BaziInfoModal extends Modal {
    constructor(app, baziInfo, onInsert) {
        super(app);
        this.baziInfo = baziInfo;
        this.onInsert = onInsert;
    }
    onOpen() {
        const { contentEl } = this;
        contentEl.createEl('h2', { text: '八字命盘信息' });
        // 创建信息容器
        const infoContainer = contentEl.createDiv({ cls: 'bazi-info-container' });
        // 生成HTML内容
        const id = 'bazi-view-' + Math.random().toString(36).substring(2, 9);
        const html = BaziService.generateBaziHTML(this.baziInfo, id);
        // 渲染HTML
        infoContainer.innerHTML = html;
        // 添加按钮
        const buttonContainer = contentEl.createDiv({ cls: 'bazi-button-container' });
        // 插入笔记按钮
        new Setting(buttonContainer)
            .addButton(button => {
            button.setButtonText('插入到笔记')
                .setCta()
                .onClick(() => {
                // 生成代码块
                const dateStr = `${this.baziInfo.solarDate} ${this.baziInfo.solarTime}`;
                const codeBlock = `\`\`\`bazi
date: ${dateStr}
\`\`\``;
                this.onInsert(codeBlock);
                this.close();
            });
        })
            .addButton(button => {
            button.setButtonText('关闭')
                .onClick(() => {
                this.close();
            });
        });
    }
    onClose() {
        const { contentEl } = this;
        contentEl.empty();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmF6aUluZm9Nb2RhbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkJhemlJbmZvTW9kYWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFPLEtBQUssRUFBRSxPQUFPLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDL0MsT0FBTyxFQUFZLFdBQVcsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBRWhFOztHQUVHO0FBQ0gsTUFBTSxPQUFPLGFBQWMsU0FBUSxLQUFLO0lBSXRDLFlBQVksR0FBUSxFQUFFLFFBQWtCLEVBQUUsUUFBcUM7UUFDN0UsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ1gsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7SUFDM0IsQ0FBQztJQUVELE1BQU07UUFDSixNQUFNLEVBQUUsU0FBUyxFQUFFLEdBQUcsSUFBSSxDQUFDO1FBRTNCLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxDQUFDLENBQUM7UUFFN0MsU0FBUztRQUNULE1BQU0sYUFBYSxHQUFHLFNBQVMsQ0FBQyxTQUFTLENBQUMsRUFBRSxHQUFHLEVBQUUscUJBQXFCLEVBQUUsQ0FBQyxDQUFDO1FBRTFFLFdBQVc7UUFDWCxNQUFNLEVBQUUsR0FBRyxZQUFZLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3JFLE1BQU0sSUFBSSxHQUFHLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBRTdELFNBQVM7UUFDVCxhQUFhLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztRQUUvQixPQUFPO1FBQ1AsTUFBTSxlQUFlLEdBQUcsU0FBUyxDQUFDLFNBQVMsQ0FBQyxFQUFFLEdBQUcsRUFBRSx1QkFBdUIsRUFBRSxDQUFDLENBQUM7UUFFOUUsU0FBUztRQUNULElBQUksT0FBTyxDQUFDLGVBQWUsQ0FBQzthQUN6QixTQUFTLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDbEIsTUFBTSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUM7aUJBQzFCLE1BQU0sRUFBRTtpQkFDUixPQUFPLENBQUMsR0FBRyxFQUFFO2dCQUNaLFFBQVE7Z0JBQ1IsTUFBTSxPQUFPLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsRUFBRSxDQUFDO2dCQUN4RSxNQUFNLFNBQVMsR0FBRztRQUN0QixPQUFPO09BQ1IsQ0FBQztnQkFDSSxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDO2dCQUN6QixJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7WUFDZixDQUFDLENBQUMsQ0FBQztRQUNQLENBQUMsQ0FBQzthQUNELFNBQVMsQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUNsQixNQUFNLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQztpQkFDdkIsT0FBTyxDQUFDLEdBQUcsRUFBRTtnQkFDWixJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7WUFDZixDQUFDLENBQUMsQ0FBQztRQUNQLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELE9BQU87UUFDTCxNQUFNLEVBQUUsU0FBUyxFQUFFLEdBQUcsSUFBSSxDQUFDO1FBQzNCLFNBQVMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUNwQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHAsIE1vZGFsLCBTZXR0aW5nIH0gZnJvbSAnb2JzaWRpYW4nO1xuaW1wb3J0IHsgQmF6aUluZm8sIEJhemlTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvQmF6aVNlcnZpY2UnO1xuXG4vKipcbiAqIOWFq+Wtl+S/oeaBr+WxleekuuaooeaAgeahhlxuICovXG5leHBvcnQgY2xhc3MgQmF6aUluZm9Nb2RhbCBleHRlbmRzIE1vZGFsIHtcbiAgcHJpdmF0ZSBiYXppSW5mbzogQmF6aUluZm87XG4gIHByaXZhdGUgb25JbnNlcnQ6IChjb2RlQmxvY2s6IHN0cmluZykgPT4gdm9pZDtcblxuICBjb25zdHJ1Y3RvcihhcHA6IEFwcCwgYmF6aUluZm86IEJhemlJbmZvLCBvbkluc2VydDogKGNvZGVCbG9jazogc3RyaW5nKSA9PiB2b2lkKSB7XG4gICAgc3VwZXIoYXBwKTtcbiAgICB0aGlzLmJhemlJbmZvID0gYmF6aUluZm87XG4gICAgdGhpcy5vbkluc2VydCA9IG9uSW5zZXJ0O1xuICB9XG5cbiAgb25PcGVuKCkge1xuICAgIGNvbnN0IHsgY29udGVudEVsIH0gPSB0aGlzO1xuXG4gICAgY29udGVudEVsLmNyZWF0ZUVsKCdoMicsIHsgdGV4dDogJ+WFq+Wtl+WRveebmOS/oeaBrycgfSk7XG5cbiAgICAvLyDliJvlu7rkv6Hmga/lrrnlmahcbiAgICBjb25zdCBpbmZvQ29udGFpbmVyID0gY29udGVudEVsLmNyZWF0ZURpdih7IGNsczogJ2JhemktaW5mby1jb250YWluZXInIH0pO1xuXG4gICAgLy8g55Sf5oiQSFRNTOWGheWuuVxuICAgIGNvbnN0IGlkID0gJ2Jhemktdmlldy0nICsgTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyaW5nKDIsIDkpO1xuICAgIGNvbnN0IGh0bWwgPSBCYXppU2VydmljZS5nZW5lcmF0ZUJhemlIVE1MKHRoaXMuYmF6aUluZm8sIGlkKTtcblxuICAgIC8vIOa4suafk0hUTUxcbiAgICBpbmZvQ29udGFpbmVyLmlubmVySFRNTCA9IGh0bWw7XG5cbiAgICAvLyDmt7vliqDmjInpkq5cbiAgICBjb25zdCBidXR0b25Db250YWluZXIgPSBjb250ZW50RWwuY3JlYXRlRGl2KHsgY2xzOiAnYmF6aS1idXR0b24tY29udGFpbmVyJyB9KTtcblxuICAgIC8vIOaPkuWFpeeslOiusOaMiemSrlxuICAgIG5ldyBTZXR0aW5nKGJ1dHRvbkNvbnRhaW5lcilcbiAgICAgIC5hZGRCdXR0b24oYnV0dG9uID0+IHtcbiAgICAgICAgYnV0dG9uLnNldEJ1dHRvblRleHQoJ+aPkuWFpeWIsOeslOiusCcpXG4gICAgICAgICAgLnNldEN0YSgpXG4gICAgICAgICAgLm9uQ2xpY2soKCkgPT4ge1xuICAgICAgICAgICAgLy8g55Sf5oiQ5Luj56CB5Z2XXG4gICAgICAgICAgICBjb25zdCBkYXRlU3RyID0gYCR7dGhpcy5iYXppSW5mby5zb2xhckRhdGV9ICR7dGhpcy5iYXppSW5mby5zb2xhclRpbWV9YDtcbiAgICAgICAgICAgIGNvbnN0IGNvZGVCbG9jayA9IGBcXGBcXGBcXGBiYXppXG5kYXRlOiAke2RhdGVTdHJ9XG5cXGBcXGBcXGBgO1xuICAgICAgICAgICAgdGhpcy5vbkluc2VydChjb2RlQmxvY2spO1xuICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgICAgIH0pO1xuICAgICAgfSlcbiAgICAgIC5hZGRCdXR0b24oYnV0dG9uID0+IHtcbiAgICAgICAgYnV0dG9uLnNldEJ1dHRvblRleHQoJ+WFs+mXrScpXG4gICAgICAgICAgLm9uQ2xpY2soKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgICAgIH0pO1xuICAgICAgfSk7XG4gIH1cblxuICBvbkNsb3NlKCkge1xuICAgIGNvbnN0IHsgY29udGVudEVsIH0gPSB0aGlzO1xuICAgIGNvbnRlbnRFbC5lbXB0eSgpO1xuICB9XG59XG4iXX0=