import { App, Editor, MarkdownView, Modal, Notice, Plugin, PluginSettingTab, Setting, MarkdownPostProcessorContext, debounce } from 'obsidian';
import { BaziService } from 'src/services/BaziService';
import { DatePickerModal } from 'src/ui/DatePickerModal';
import { BaziInfoModal } from 'src/ui/BaziInfoModal';
import { BaziParserModal } from 'src/ui/BaziParserModal';
import { BaziSettingsModal } from 'src/ui/BaziSettingsModal';
import { InteractiveBaziView } from 'src/ui/InteractiveBaziView';

interface BaziPluginSettings {
	defaultFormat: string;
	useInteractiveView: boolean;
	debugMode: boolean;
	autoUpdateCodeBlock: boolean;
	codeBlockUpdateDelay: number;
	baziSect: string; // 八字流派
	showShenSha: {
		siZhu: boolean; // 四柱神煞
		daYun: boolean; // 大运神煞
		liuNian: boolean; // 流年神煞
		xiaoYun: boolean; // 小运神煞
		liuYue: boolean; // 流月神煞
	};
}

const DEFAULT_SETTINGS: BaziPluginSettings = {
	defaultFormat: 'full', // 'full' 或 'simple'
	useInteractiveView: true, // 是否使用交互式视图
	debugMode: false, // 调试模式
	autoUpdateCodeBlock: true, // 自动更新代码块
	codeBlockUpdateDelay: 500, // 代码块更新延迟（毫秒）
	baziSect: '2', // 默认使用流派2（晚子时日柱算当天）
	showShenSha: {
		siZhu: true, // 默认显示四柱神煞
		daYun: true, // 默认显示大运神煞
		liuNian: true, // 默认显示流年神煞
		xiaoYun: true, // 默认显示小运神煞
		liuYue: true, // 默认显示流月神煞
	}
}

export default class BaziPlugin extends Plugin {
	settings: BaziPluginSettings;

	/**
	 * 添加命令
	 */
	addCommands() {
		// 添加命令：输入时间转八字
		this.addCommand({
			id: 'open-date-picker',
			name: '输入时间转八字',
			editorCallback: (editor: Editor) => {
				this.openDatePickerModal((baziInfo) => {
					// 获取日期字符串
					const dateStr = `${baziInfo.solarDate} ${baziInfo.solarTime}`;

					// 构建代码块内容
					let codeBlockContent = `\`\`\`bazi\ndate: ${dateStr}\n`;

					// 添加性别参数
					if (baziInfo.gender) {
						const genderLabel = baziInfo.gender === '1' ? '男' : '女';
						codeBlockContent += `gender: ${genderLabel}\n`;
					}

					// 完成代码块
					codeBlockContent += `\`\`\``;

					// 在光标位置插入bazi代码块
					editor.replaceSelection(codeBlockContent);

					// 显示通知
					new Notice('八字命盘已插入');
				});
			}
		});

		// 添加命令：解析选中的八字
		this.addCommand({
			id: 'parse-selected-bazi',
			name: '解析选中的八字',
			editorCallback: (editor: Editor, view: MarkdownView) => {
				const selection = editor.getSelection();
				if (selection) {
					// 清理选中的文本，去除多余的空格
					const cleanedBazi = selection.replace(/\s+/g, ' ').trim();

					// 检查是否符合八字格式（四个天干地支组合，用空格分隔）
					const baziPattern = /^([甲乙丙丁戊己庚辛壬癸][子丑寅卯辰巳午未申酉戌亥])\s+([甲乙丙丁戊己庚辛壬癸][子丑寅卯辰巳午未申酉戌亥])\s+([甲乙丙丁戊己庚辛壬癸][子丑寅卯辰巳午未申酉戌亥])\s+([甲乙丙丁戊己庚辛壬癸][子丑寅卯辰巳午未申酉戌亥])$/;

					if (baziPattern.test(cleanedBazi)) {
						// 直接解析八字，获取可能的年份
						try {
							const baziInfo = BaziService.parseBaziString(cleanedBazi);

							// 构建代码块内容
							let codeBlockContent = `\`\`\`bazi\nbazi: ${cleanedBazi}\n`;

							// 完成代码块
							codeBlockContent += `\`\`\``;

							// 替换选中的文本为代码块
							editor.replaceSelection(codeBlockContent);
							new Notice('八字已转换为代码块');
						} catch (error) {
							// 如果解析失败，仅使用基本格式
							editor.replaceSelection(`\`\`\`bazi
bazi: ${cleanedBazi}
\`\`\``);
							new Notice('八字已转换为代码块');
						}
					} else {
						// 如果不符合格式，打开解析模态框让用户修改
						this.openBaziParserModal(selection, (baziInfo) => {
							// 获取解析后的八字
							const parsedBazi = `${baziInfo.yearPillar} ${baziInfo.monthPillar} ${baziInfo.dayPillar} ${baziInfo.hourPillar}`;

							// 构建代码块内容
							let codeBlockContent = `\`\`\`bazi\nbazi: ${parsedBazi}\n`;

							// 添加性别参数
							if (baziInfo.gender) {
								const genderLabel = baziInfo.gender === '1' ? '男' : '女';
								codeBlockContent += `gender: ${genderLabel}\n`;
							}

							// 不自动添加年份参数，让用户通过年份选择栏自行选择

							// 完成代码块
							codeBlockContent += `\`\`\``;

							// 替换选中的文本为代码块
							editor.replaceSelection(codeBlockContent);
							new Notice('八字已转换为代码块');
						});
					}
				} else {
					new Notice('请先选择八字文本');
				}
			}
		});
	}
}
